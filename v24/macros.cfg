[include ./nozzle_wiper.cfg]            # nozzle_clean

[gcode_macro MESSAGE]
gcode:
  {% set msg = params.MSG %}
  RESPOND PREFIX= MSG="{msg}"
  M117 {msg}

#####################################################################
#	Macros
#####################################################################

[gcode_macro G32]
gcode:
  MESSAGE MSG="Homing and QGL..."
  BED_MESH_CLEAR
  CG28
  CQGL

# Conditional Homing
[gcode_macro CG28]
gcode:
  M109 S160  # Pre-heat nozzle for Beacon Contact
  {% if "xyz" not in printer.toolhead.homed_axes %}
    STATUS_LEVELING
    G28
  {% endif %}

# Conditional QGL
[gcode_macro CQGL]
gcode:
  {% if printer.quad_gantry_level.applied == False %}
    STATUS_LEVELING
    CG28
    QUAD_GANTRY_LEVEL
    G28 Z
  {% endif %}
  G0 Z30 F3600
  G0 X150 Y150 F7200

[include KAMP_Settings.cfg]
[include TEST_SPEED.cfg]

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  {% set e = params.E|default(15.1)|float %} #edit to your retract length
  {% set BED = params.BED|default(55)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(200)|float %}
  {% set CHAMBER_TEMP = params.CHAMBER|default(0)|float %}
  {% set Z_OFFSET = params.Z_OFFSET|default(-0.00)|float %}
  {% set SPEED_PERC = params.SPEED_PERC|default(100)|int %}
  {% set FLOW_PERC = params.FLOW_PERC|default(100)|int %}
  {% set PA = params.PA|default(0.0240)|float %}
  {% set ST = params.ST|default(0.020)|float %}
  {% set DWELL = params.DWELL|default(10)|int %}  # In minute integers
  {% set DWELL_SECS = DWELL * 60 * 1000|int %}  # convert minutes to microseconds
#  {% set MESH_MIN = params.PRINT_MIN %}  # mesh min from the slicer
#  {% set MESH_MAX = params.PRINT_MAX %}  # mesh max from the slicer
  
  # Use absolute coordinates
  G21 ; set units to millimeters
  G90 ; use absolute coordinates
  G92 E0 ; Reset Extruder

  BED_MESH_CLEAR
  SET_GCODE_OFFSET Z=0

  G28     ; home axes
  G0 Z2   ; position beacon at 2mm for heat soak
  STATUS_HEATING
  MESSAGE MSG="Bed Heating..."
#  NEOPIXEL_DISPLAY LED=caselight TYPE=bed_temp MODE=progress

  M190 S{BED}   #  wait for the bed to reach temp
  {%if CHAMBER_TEMP > 0 %}
    _BED_FAN_SET
    SET_GCODE_VARIABLE MACRO=_BED_FAN_VARS VARIABLE=chamber_temp VALUE={CHAMBER_TEMP}
  {% endif %}

  {%if DWELL_SECS > 0 %}
    MESSAGE MSG="Heat Soak..."
    G4 P{DWELL_SECS} ; Wait 10 minutes for the bed to stabilise
  {% endif %}
  # Home the printer
  G4 P60000       ; optional, let temps settle for 1 min

  WIPE_NOZZLE     ; call another macro to wipe nozzle if available

  G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
  CQGL                                ; or QGL to balance towers
  STATUS_MESHING
  BED_MESH_CALIBRATE RUNS=2           ; bed mesh in scan mode

  # CLEAN_NOZZLE
  G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only after tilt/mesh

  MESSAGE MSG="Extruder Heating..."
  STATUS_HEATING
  M104 S{EXTRUDER}                    ; set extruder to print temp
  M109 S{EXTRUDER}                    ; wait for extruder temp

  SET_GCODE_OFFSET Z=0.06     ; add a little offset for hotend thermal expansion
                             ; needs fine tuning, long meltzones require more
  SET_GCODE_OFFSET Z_ADJUST={OFFSET}  ; apply optional material squish via slicer

  STATUS_PRINTING
  MESSAGE MSG="Priming..."
  LINE_PURGE
  M220 S{SPEED_PERC}
  M221 S{FLOW_PERC}
  SET_PRESSURE_ADVANCE ADVANCE={PA} SMOOTH_TIME={ST}
  #M400
  G90 ; use absolute coordinates
  M83 ; use relative distances for extrusion

#  NEOPIXEL_DISPLAY LED=caselight TYPE=print_percent MODE=progress

  {%if CHAMBER_TEMP > 0 %}
    UPDATE_DELAYED_GCODE ID=_BED_FAN_MONITOR DURATION=1
  {% endif %}

  STATUS_PRINTING
  MESSAGE MSG="Printing..."

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    SAFE_Z_PARK
    TURN_OFF_HEATERS
    ; clean_nozzle
    ; G91                            ; relative positioning
    ; G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    M107
    BED_MESH_CLEAR
    MESSAGE MSG=""
    STATUS_HEATING

## 	Common Temperature Sensors
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "PT1000"
[gcode_macro dark_mode]
gcode:
    SET_LED LED=caselight GREEN=0 RED=0 BLUE=0  ; turn case light off
    set_nozzle_leds_off ; turn off SB nozzle Leds
    set_logo_leds_off ; turn off SB Logo Leds
    SET_LED LED=lcd RED=0 GREEN=0 BLUE=0 ; turn off LCD

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    dark_mode

[gcode_macro ON]
gcode:
  RESETRGB
  SET_LED LED=caselight GREEN=0.5 RED=0.5 BLUE=0.5
  set_nozzle_leds_on
  set_logo_leds_on

[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=filter SPEED=0

[gcode_macro TOGGLE_NEVERMORE]
gcode:
    {% if printer['fan_generic filter'].speed > 0 %}
      SET_FAN_SPEED FAN=filter SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=filter SPEED=1
    {% endif %}

[gcode_macro LCDRGB]
gcode:
    {% set r = params.R|default(1)|float %}
    {% set g = params.G|default(1)|float %}
    {% set b = params.B|default(1)|float %}

    SET_LED LED=sb_leds RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
    SET_LED LED=sb_leds RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
    SET_LED LED=sb_leds RED={r} GREEN={g} BLUE={b} INDEX=3

[gcode_macro RESETRGB]
gcode:
    SET_LED LED=sb_leds RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
    SET_LED LED=sb_leds RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
    SET_LED LED=sb_leds RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

[delayed_gcode SETDISPLAYNEOPIXEL]
initial_duration: 1
gcode:
    RESETRGB

# [gcode_macro _CASELIGHT_ON]
# description: Helper: Light on
# gcode:
#   SET_PIN PIN=caselight VALUE=0.4
#   {action_respond_info("Caselight on")}
#
# [gcode_macro _CASELIGHT_OFF]
# description: Helper: Light off
# gcode:
#   SET_PIN PIN=caselight VALUE=0.0
#   {action_respond_info("Caselight off")}
#
# [gcode_macro CASELIGHT]
# description: Toggle light
# gcode: {% if printer['output_pin caselight'].value == 0 %} _CASELIGHT_ON {% else %} _CASELIGHT_OFF {% endif %}

## [gcode_macro EXCITATE_AXIS_AT_FREQ]
## description: Maintain a specified input shaper excitating frequency for some time to diagnose vibrations
## gcode:
##    {% set FREQUENCY = params.FREQUENCY|default(25)|int %}
##    {% set TIME = params.TIME|default(10)|int %}
##    {% set AXIS = params.AXIS|default("x")|string|lower %}
##
##    TEST_RESONANCES OUTPUT=raw_data AXIS={AXIS} FREQ_START={FREQUENCY-1} FREQ_END={FREQUENCY+1} HZ_PER_SEC={1/(TIME/3)}
##    M400
