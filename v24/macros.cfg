[include ./nozzle_wiper.cfg]            # nozzle_clean

[gcode_macro MESSAGE]
gcode:
  {% set msg = params.MSG %}
  RESPOND PREFIX= MSG="{msg}"
  M117 {msg}

#####################################################################
#	Macros
#####################################################################

[gcode_macro G32]
gcode:
  MESSAGE MSG="Homing and QGL..."
  BED_MESH_CLEAR
  CG28
  CQGL

# Conditional Homing
[gcode_macro CG28]
gcode:
  M109 S170  # Pre-heat nozzle for Beacon Contact
  {% if "xyz" not in printer.toolhead.homed_axes %}
    STATUS_HOMING
    MESSAGE MSG="Homing..."
    G28
  {% endif %}

# Conditional QGL
[gcode_macro CQGL]
gcode:
  {% if printer.quad_gantry_level.applied == False %}
    STATUS_LEVELING
    CG28
    MESSAGE MSG="Leveling..."
    QUAD_GANTRY_LEVEL
    G28 Z METHOD=PROXIMITY CALIBRATE=0    ; calibrate z offset only after qgl
  {% endif %}
  G0 Z30 F3600
  G0 X150 Y150 F7200

[include KAMP_Settings.cfg]

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  {% set e = params.E|default(15.1)|float %} #edit to your retract length
  {% set BED = params.BED|default(55)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(200)|float %}
  {% set CHAMBER_TEMP = params.CHAMBER|default(0)|float %}
  {% set Z_OFFSET = params.Z_OFFSET|default(-0.00)|float %}
  {% set SPEED_PERC = params.SPEED_PERC|default(100)|int %}
  {% set FLOW_PERC = params.FLOW_PERC|default(100)|int %}
  {% set PA = params.PA|default(0.0600)|float %}
  {% set ST = params.ST|default(0.020)|float %}
  {% set MESH_MIN = params.PRINT_MIN|default(40,20) %}  # mesh min from the slicer
  {% set MESH_MAX = params.PRINT_MAX|default(260,270) %}  # mesh max from the slicer
  {% set MATERIAL = params.MATERIAL|default("use_default") %}  # default to ABS if not set

  # Use absolute coordinates
  G21 ; set units to millimeters
  G90 ; use absolute coordinates
  G92 E0 ; Reset Extruder
  M106 S0 ; turn off part fan

  {% if BED <= 55 %}
    PID_PROFILE LOAD=55 HEATER=heater_bed
  {% elif (BED > 55) and (BED <= 80) %}
    PID_PROFILE LOAD=80 HEATER=heater_bed
  {% else %}
    PID_PROFILE LOAD=100 HEATER=heater_bed
  {% endif %}

  _SET_MPC_MATERIAL MATERIAL={MATERIAL}

  SET_GCODE_OFFSET Z=0
  MESSAGE MSG="Bed Heating..."
  M140 S{BED} #  set initial bed temp for chamber fans if required and let chamber heat up whilst bed is also heating up
#  NEOPIXEL_DISPLAY LED=caselight TYPE=bed_temp MODE=progress

  {%if CHAMBER_TEMP|int > 0 %}
    _BED_FAN_SETUP
    M400
    _BED_FAN_SET
    UPDATE_DELAYED_GCODE ID=_BED_FAN_MONITOR DURATION=1
    MESSAGE MSG="Waiting for Chamber: {CHAMBER_TEMP} ÂºC"
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER_TEMP|int}
  {% endif %}
  M190 S{BED} #  wait for the bed to reach temp

  M109 S170   # Pre-heat nozzle for Beacon Contact
  ; WIPE_NOZZLE     ; call another macro to wipe nozzle if available

  # Home the printer
  G32 # homes and QGLs if needed
  STATUS_MESHING
  MESSAGE MSG="Meshing..."
  BED_MESH_CALIBRATE RUNS=2 ADAPTIVE=1  ; bed mesh in scan mode

  # CLEAN_NOZZLE
  STATUS_CALIBRATING_Z
  MESSAGE MSG="Z Contact Non-Calibrate..."
  G28 Z METHOD=PROXIMITY CALIBRATE=0    ; calibrate z offset only after qgl/mesh

  MESSAGE MSG="Extruder Heating..."
  M109 S{EXTRUDER}                    ; wait for extruder temp
  {%if BED <= 60 %}
    SET_GCODE_OFFSET Z=0.079 ; add a little offset for hotend thermal expansion
                             ; needs fine tuning, long meltzones require more
  {% else %}
    SET_GCODE_OFFSET Z=0.195 ; thermal expansion for high temp materials like ABS
  {% endif %}
  SET_GCODE_OFFSET Z_ADJUST={Z_OFFSET}  ; apply optional material squish via slicer

  MESSAGE MSG="Priming..."
  STATUS_PRINTING
  M220 S{SPEED_PERC}
  M221 S{FLOW_PERC}
  SET_PRESSURE_ADVANCE ADVANCE={PA} SMOOTH_TIME={ST}
  LINE_PURGE
  G90 ; use absolute coordinates
  M83 ; use relative distances for extrusion
#  NEOPIXEL_DISPLAY LED=caselight TYPE=print_percent MODE=progress

  MESSAGE MSG="Printing..."

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    SAFE_Z_PARK
    TURN_OFF_HEATERS
    ; clean_nozzle
    ; G91                            ; relative positioning
    ; G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    M107
    BED_MESH_CLEAR
    MESSAGE MSG=""
    STATUS_HEATING

[gcode_macro dark_mode]
gcode:
    SET_LED LED=caselight GREEN=0 RED=0 BLUE=0  ; turn case light off
    set_nozzle_leds_off ; turn off SB nozzle Leds
    set_logo_leds_off ; turn off SB Logo Leds
    SET_LED LED=lcd RED=0 GREEN=0 BLUE=0 ; turn off LCD

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    dark_mode

[gcode_macro ON]
gcode:
  RESETRGB
  SET_LED LED=caselight GREEN=0.5 RED=0.5 BLUE=0.5
  set_nozzle_leds_on
  set_logo_leds_on

[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=filter SPEED=0

[gcode_macro TOGGLE_NEVERMORE]
gcode:
    {% if printer['fan_generic filter'].speed > 0 %}
      SET_FAN_SPEED FAN=filter SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=filter SPEED=1
    {% endif %}

[gcode_macro LCDRGB]
gcode:
    {% set r = params.R|default(1)|float %}
    {% set g = params.G|default(1)|float %}
    {% set b = params.B|default(1)|float %}

    SET_LED LED=sb_leds RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
    SET_LED LED=sb_leds RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
    SET_LED LED=sb_leds RED={r} GREEN={g} BLUE={b} INDEX=3

[gcode_macro RESETRGB]
gcode:
    SET_LED LED=sb_leds RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
    SET_LED LED=sb_leds RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
    SET_LED LED=sb_leds RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

[delayed_gcode SETDISPLAYNEOPIXEL]
initial_duration: 1
gcode:
    RESETRGB


[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}
