## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

[display_status]

[respond]

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]
recover_velocity: 50.

[force_move]
enable_force_move: True

[exclude_object]

[gcode_arcs]
resolution: 0.1

[mcu]
serial: /dev/ttyAMA0
restart_method: command

[include sb2040.cfg]

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 10000			#Max 4000
max_z_velocity: 150			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 750
square_corner_velocity: 5.0

[include steppers.cfg]
[include sensorless.cfg]
[include bed_mesh.cfg]
[include rpi.cfg]

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
##	Adjust Max Power so your heater doesn't warp your bed
# 300X300*.4 = (360W max power / 400W) Keenvo ~= 0.9
max_power: 0.9 # below the 0.9 threshold to avoid a taco bed
# pwm_cycle_time: 0.017
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#	Probe
#####################################################################

[probe]
pin: ^sb2040:gpio28
x_offset: 0
y_offset: 0
speed: 6.0
samples: 3
samples_result: median
sample_retract_dist: 1.00
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
   {% set PROBE_TEMP = 150 %}
   {% set MAX_TEMP = PROBE_TEMP + 5 %}
   {% set ACTUAL_TEMP = printer.extruder.temperature %}
   {% set TARGET_TEMP = printer.extruder.target %}

   {% if TARGET_TEMP > PROBE_TEMP %}
       { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
       M109 S{ PROBE_TEMP }
   {% else %}
       # Temperature target is already low enough, but nozzle may still be too hot.
       {% if ACTUAL_TEMP > MAX_TEMP %}
           { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
           TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
       {% endif %}
    {% endif %}

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan
pin: sb2040:gpio14
max_power: 1.0
shutdown_speed: 1.0
#kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan
pin: sb2040:gpio13
#max_power: 1.0
#kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[controller_fan case_fan]
##	Controller fan - FAN0 Connector
## Need the electronics fan to kick in as soon as any power hungry device is started
pin: PB0
kick_start_time: 0.5
max_power: 1.0
off_below: 0.1
heater: heater_bed, extruder
#heater_temp: 40.0 #disable wait for temp - start cooling immediately
stepper: stepper_x,stepper_y,stepper_z # as soon as a stepper is active, start cooling

[fan_generic exhaust_fan]
##  Exhaust fan - In E1 OUT Position
# Only run exhaust after print has finished
# to avoid large part warping from warm air escape
pin: PC8
max_power: 1.0
shutdown_speed: 1.0

# Nevermore fan
[fan_generic filter]
# Nevermore - In E0 OUT Position
pin: PB15
kick_start_time: 0.500

#####################################################################
#	LED Control
#####################################################################

[neopixel caselight]
pin: PD3
chain_count: 34
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

[include led_progress.cfg]
[include sb_led_macros.cfg]
[include heating.cfg]

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[quad_gantry_level]
# measured to the inner z-belt centre from the (0,0) coordinate
# re-measure if the bed is moved!
# see https://klipper.discourse.group/t/qgl-behaviour-on-a-voron350/6516/8
gantry_corners:
	-46.6,4.5
	349,374.4
# TAP 0,0 nozzle offset allows equi-distant probe points
points:
	25,25
	25,275
	275,275
	275,25
speed: 200
horizontal_move_z: 10
retries: 3
retry_tolerance: 0.008
max_adjust: 10

#####################################################################
#	Displays
#####################################################################:q

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel lcd]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel.
#	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#    SET_LED LED=lcd RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#    SET_LED LED=lcd RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#    SET_LED LED=lcd RED=1 GREEN=0 BLUE=0 INDEX=3

# centre bed edge temp
[temperature_sensor bed_edge]
sensor_type: Generic 3950
sensor_pin: PC2
gcode_id: D

# Spider MCU temp
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
max_temp: 100

[include macros.cfg]
[include pause_resume.cfg]
[include homing.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.496
#*# pid_ki = 0.907
#*# pid_kd = 127.366
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.512
#*# pid_ki = 2.194
#*# pid_kd = 474.160
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 55.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 41.8
#*#
#*# [probe]
#*# z_offset = -0.505
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.013125, 0.012500, 0.035000, 0.041875, 0.028750
#*# 	0.001250, -0.012500, 0.010625, 0.011250, 0.001250
#*# 	0.000000, -0.008750, 0.013750, 0.018750, -0.002500
#*# 	-0.014375, -0.021875, 0.009375, 0.015000, 0.008125
#*# tension = 0.2
#*# min_x = 43.25
#*# algo = lagrange
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 68.01
#*# x_count = 5
#*# max_y = 232.83
#*# mesh_x_pps = 2
#*# max_x = 210.17
#*#
#*# [bed_mesh PLA-55]
#*# version = 1
#*# points =
#*# 	-0.045625, -0.022500, -0.011875, 0.003125, 0.009375
#*# 	-0.043125, -0.030000, -0.020625, 0.001250, 0.006875
#*# 	-0.025625, -0.005625, 0.000000, 0.016875, 0.024375
#*# 	-0.068125, -0.061875, -0.057500, -0.028750, -0.025625
#*# 	-0.057500, -0.046250, -0.033750, -0.021250, -0.013125
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
