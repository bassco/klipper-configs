## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## Z Endstop Switch location	      [safe_z_home] section
## Homing end position				      [gcode_macro G32] section
## Z Endstop Switch  offset for Z0	[stepper_z] section
## Min & Max gantry corner postions	[quad_gantry_level] section
## PID tune								          [extruder] and [heater_bed] sections
## Fine tune E steps					      [extruder] section

[display_status]

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]
recover_velocity: 50.

[force_move]
enable_force_move: True

[exclude_object]

[mcu]
serial: /dev/ttyAMA0
restart_method: command

[include sb2040.cfg]

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 4000			        #Max 4000
max_z_velocity: 50			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 750
square_corner_velocity: 5.0

[include steppers.cfg]
[include sensorless.cfg]
[include bed_mesh.cfg]
[include rpi.cfg]

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
##	Adjust Max Power so your heater doesn't warp your bed
# 300X300*.4 = (360W max power / 400W) Keenvo ~= 0.9
max_power: 0.9 # below the 0.9 threshold to avoid a taco bed
# pwm_cycle_time: 0.017
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#	Probe
#####################################################################

[probe]
pin: ^sb2040:gpio28
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 6.0
samples: 3
samples_result: median
sample_retract_dist: 1.00
samples_tolerance: 0.006
samples_tolerance_retries: 3
# activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}
#
#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
#        # Temperature target is already low enough, but nozzle may still be too hot.
#        {% if ACTUAL_TEMP > MAX_TEMP %}
#            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#        {% endif %}
#    {% endif %}

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - FAN2 Connector
pin: sb2040:gpio14
max_power: 1.0
shutdown_speed: 1.0
#kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - FAN1 Connector
pin: sb2040:gpio13
#max_power: 1.0
#kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[controller_fan case_fan]
##	Controller fan - FAN0 Connector
## Need the electronics fan to kick in as soon as any power hunger device is started
pin: PB0
kick_start_time: 0.5
max_power: 1.0
off_below: 0.1
heater: heater_bed, extruder
#heater_temp: 40.0 #disable wait for temp - start cooling immediately
stepper: stepper_x,stepper_y,stepper_z # as soon as a stepper is active, start cooling

[fan_generic exhaust_fan]
##  Exhaust fan - In E1 OUT Position
# Only run exhaust after print has finished
# to avoid large part warping from warm air escape
pin: PC8
max_power: 1.0
shutdown_speed: 1.0

# Nevermore fan

[fan_generic filter]
# Nevermore - In E0 OUT Position
pin: PB15
kick_start_time: 0.500

#####################################################################
#	LED Control
#####################################################################

[neopixel caselight]
pin: PD3 # The pin connected to the neopixel.
chain_count: 34
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).

color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

[include led_progress.cfg]
[include sb_led_macros.cfg]

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
gantry_corners:
	-60,-10
	360,370
##	Probe points
points:
	50,25
	50,225
	250,225
	250,25
speed: 100
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.00750
max_adjust: 10

#####################################################################
#	Displays
#####################################################################:q

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel lcd]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel.
#	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#    SET_LED LED=lcd RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#    SET_LED LED=lcd RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#    SET_LED LED=lcd RED=1 GREEN=0 BLUE=0 INDEX=3

# centre bed edge temp
## [temperature_sensor bed_edge]
## sensor_type: Generic 3950
## sensor_pin: PC2
## gcode_id: D

# Spider MCU temp
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
max_temp: 100

[include macros.cfg]
[include pause_resume.cfg]

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-150 F3600

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-150 F3600

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}

  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}

  {% if home_all or 'Z' in params %}
    G28 Z
    G1 Z20
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.512
#*# pid_ki = 2.194
#*# pid_kd = 474.160
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 48.4
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 46.8
#*#
#*# [probe]
#*# z_offset = -0.685
